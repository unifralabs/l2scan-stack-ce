name: Release Helm Chart

on:
  push:
    # branches:
    #   - main
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Chart version to release'
        required: true
        default: '0.1.0'

permissions:
  contents: read
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Add Helm repos
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo update

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Extract version from tag (remove 'v' prefix)
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            # Generate version for main branch push: 0.0.0-main-{short_sha}
            SHORT_SHA=$(git rev-parse --short HEAD)
            VERSION="0.0.0-main-${SHORT_SHA}"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Chart version: $VERSION"

      - name: Update Chart version
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          echo "Updating chart version to $VERSION"
          
          # Update Chart.yaml
          sed -i "s/^version:.*/version: $VERSION/" helm-chart/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"$VERSION\"/" helm-chart/Chart.yaml
          
          # Show the changes
          echo "Updated Chart.yaml:"
          cat helm-chart/Chart.yaml

      - name: Clean and update dependencies
        run: |
          cd helm-chart
          rm -rf charts/ Chart.lock
          helm dependency update

      - name: Lint Helm chart
        run: |
          helm lint helm-chart

      - name: Login to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | helm registry login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Package and Push Helm chart
        run: |
          # Package the chart
          helm package helm-chart
          
          # Push to GHCR
          CHART_FILE=$(ls l2scan-stack-ce-*.tgz)
          echo "Pushing $CHART_FILE to GHCR..."
          
          helm push "$CHART_FILE" oci://ghcr.io/${{ github.repository_owner }}/helm
          
          echo "Chart pushed successfully!"
          echo "Chart URL: oci://ghcr.io/${{ github.repository_owner }}/helm/l2scan-stack-ce"

      - name: Create GitHub Release
        if: github.ref_type == 'tag' || github.event_name == 'workflow_dispatch'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', steps.version.outputs.VERSION) }}
          name: "L2Scan Stack v${{ steps.version.outputs.VERSION }}"
          body: |
            ## L2Scan Stack Helm Chart v${{ steps.version.outputs.VERSION }}
            
            ### ðŸ“¦ Installation via OCI Registry
            
            ```bash
            # Install directly from GitHub Container Registry
            helm install my-l2scan oci://ghcr.io/${{ github.repository_owner }}/helm/l2scan-stack-ce \
              --version ${{ steps.version.outputs.VERSION }} \
              --set app.env.RPC="your-rpc-url" \
              --set indexer.env.L2_RPC="your-rpc-url"
            ```
            
            ### ðŸ“‹ What's Included
            
            - **App**: Web-based blockchain explorer interface
            - **Indexer**: Blockchain data indexing service  
            - **Verifier**: Smart contract verification service
            - **PostgreSQL**: Database (optional, can use external)
            - **Redis**: Cache (optional, can use external)
            
            ### ðŸ“š Documentation
            
            - [Installation Guide](https://github.com/${{ github.repository }}#quick-start)
            - [Configuration Examples](https://github.com/${{ github.repository }}/tree/main/helm-chart/examples)
            - [Docker Compose Alternative](https://github.com/${{ github.repository }}/tree/main/docker-compose)
          draft: false
          prerelease: ${{ github.ref == 'refs/heads/main' }}



 